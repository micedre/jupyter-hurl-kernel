name: Publish JupyterLab Extension

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.0)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for uploading release assets
      id-token: write  # Required for npm and PyPI trusted publishing

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'


      - name: Get version from tag or input
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=${{ inputs.version }}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      - name: Update package.json version
        working-directory: jupyterlab-hurl-extension
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          npm version $VERSION --no-git-tag-version
          cat package.json | grep version

      - name: Install dependencies
        working-directory: jupyterlab-hurl-extension
        run: |
          npm install

      - name: Build extension
        working-directory: jupyterlab-hurl-extension
        run: |
          npm run build:prod

      - name: Verify build
        working-directory: jupyterlab-hurl-extension
        run: |
          ls -la lib/
          test -f lib/index.js || (echo "Build failed: lib/index.js not found" && exit 1)
          test -f lib/index.d.ts || (echo "Build failed: lib/index.d.ts not found" && exit 1)

      - name: Pack extension
        working-directory: jupyterlab-hurl-extension
        run: |
          npm pack
          ls -la *.tgz

      - name: Publish to npm
        working-directory: jupyterlab-hurl-extension
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public --provenance

      - name: Build Python package
        working-directory: jupyterlab-hurl-extension
        run: |
          python -m pip install build hatch hatch-nodejs-version hatch-jupyter-builder
          python -m pip install jupyterlab>=4.0.0
          python -m build

      - name: Publish to PyPI
        if: success()
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: jupyterlab-hurl-extension/dist/

      - name: Upload GitHub Release Assets
        if: github.event_name == 'release'
        working-directory: jupyterlab-hurl-extension
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} *.tgz
          gh release upload ${{ github.ref_name }} dist/*.whl
          gh release upload ${{ github.ref_name }} dist/*.tar.gz
